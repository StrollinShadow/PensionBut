
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author KASC05
 */
public class PensionBut extends javax.swing.JFrame {

    /**
     * Creates new form PensionBut
     */
    @SuppressWarnings("empty-statement")
    public PensionBut() {
        initComponents();
        EinzahltagSpinner.setEnabled(false);
        SpeichernButton3.setEnabled(false);
        SparbetragMonatTextField.setEnabled(false);
        DauerSpinner.setEnabled(false);
        SparbetragTextField.setEnabled(false);
        SpeichernButton2.setEnabled(false);
        keineBuchstabenImStartkapitalTextField(10);
        keineBuchstabenImSparbetragTextField(10);
        keineBuchstabenImSparbetragMonatTextField(10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yearMonthGroup = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        head = new javax.swing.JPanel();
        titel = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        monthlyRB = new javax.swing.JRadioButton();
        yearlyRB = new javax.swing.JRadioButton();
        StartkapitalLabel = new javax.swing.JLabel();
        StartkapitalTextField = new javax.swing.JTextField();
        SpeichernButton = new javax.swing.JButton();
        SparbetragLabel = new javax.swing.JLabel();
        SparbetragTextField = new javax.swing.JTextField();
        DauerLabel = new javax.swing.JLabel();
        SpeichernButton2 = new javax.swing.JButton();
        DauerSpinner = new javax.swing.JSpinner();
        SparbetragMonatTextField = new javax.swing.JTextField();
        SparbetragMonatLabel = new javax.swing.JLabel();
        DauerLabel1 = new javax.swing.JLabel();
        EinzahltagSpinner = new javax.swing.JSpinner();
        SpeichernButton3 = new javax.swing.JButton();
        DauerLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        head.setBackground(new java.awt.Color(51, 188, 209));

        titel.setBackground(new java.awt.Color(0, 0, 0));
        titel.setFont(new java.awt.Font("Lucida Console", 0, 48)); // NOI18N
        titel.setForeground(new java.awt.Color(0, 0, 0));
        titel.setText("Sparer");

        javax.swing.GroupLayout headLayout = new javax.swing.GroupLayout(head);
        head.setLayout(headLayout);
        headLayout.setHorizontalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(titel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headLayout.setVerticalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(titel)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        body.setBackground(new java.awt.Color(255, 255, 255));

        yearMonthGroup.add(monthlyRB);
        monthlyRB.setText("Monatlich");
        monthlyRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyRBActionPerformed(evt);
            }
        });

        yearMonthGroup.add(yearlyRB);
        yearlyRB.setText("Jährlich");
        yearlyRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyRBActionPerformed(evt);
            }
        });

        StartkapitalLabel.setText("Geben Sie das Startkapital ein:");

        StartkapitalTextField.setActionCommand("<Not Set>");
        StartkapitalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartkapitalTextFieldActionPerformed(evt);
            }
        });

        SpeichernButton.setText("Speichern");
        SpeichernButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeichernButtonActionPerformed(evt);
            }
        });

        SparbetragLabel.setText("Geben Sie den jährlichen Sparbetrag ein:");

        SparbetragTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SparbetragTextFieldActionPerformed(evt);
            }
        });

        DauerLabel.setText("Dauer (Jahre):");

        SpeichernButton2.setText("Speichern");
        SpeichernButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeichernButton2ActionPerformed(evt);
            }
        });

        DauerSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 99, 1));
        DauerSpinner.setFocusable(false);
        DauerSpinner.setMaximumSize(new java.awt.Dimension(12, 12));
        DauerSpinner.setMinimumSize(new java.awt.Dimension(0, 0));
        DauerSpinner.setRequestFocusEnabled(false);
        DauerSpinner.setValue(1);

        SparbetragMonatLabel.setText("Geben Sie den monatlichen Sparbetrag ein:");

        DauerLabel1.setText("Einzahltag:");

        EinzahltagSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        SpeichernButton3.setText("Speichern");
        SpeichernButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeichernButton3ActionPerformed(evt);
            }
        });

        DauerLabel2.setText("Tag im Monat");

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthlyRB, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SpeichernButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StartkapitalTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StartkapitalLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(63, 63, 63)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SparbetragMonatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SparbetragMonatTextField)
                            .addComponent(SpeichernButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bodyLayout.createSequentialGroup()
                                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DauerLabel1)
                                    .addGroup(bodyLayout.createSequentialGroup()
                                        .addComponent(EinzahltagSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DauerLabel2)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(98, 98, 98)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(yearlyRB, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SparbetragLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SparbetragTextField)
                        .addComponent(SpeichernButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(DauerLabel)
                    .addComponent(DauerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(147, 147, 147))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartkapitalLabel)
                    .addComponent(SparbetragLabel)
                    .addComponent(SparbetragMonatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartkapitalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SparbetragTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SparbetragMonatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DauerLabel)
                    .addComponent(DauerLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DauerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EinzahltagSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DauerLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeichernButton2)
                    .addComponent(SpeichernButton)
                    .addComponent(SpeichernButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthlyRB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearlyRB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(639, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(head, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void SpeichernButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeichernButtonActionPerformed
        String startkapital = StartkapitalTextField.getText();
        Integer.parseInt(startkapital);

    }//GEN-LAST:event_SpeichernButtonActionPerformed

    private void SpeichernButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeichernButton2ActionPerformed

        String sparbetrag = SparbetragTextField.getText();
        Integer.parseInt(sparbetrag);

        int dauer = (int) DauerSpinner.getValue();
    }//GEN-LAST:event_SpeichernButton2ActionPerformed

    private void yearlyRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyRBActionPerformed
        if (yearlyRB.isSelected()) {
            DauerSpinner.setEnabled(true);
            SparbetragTextField.setEnabled(true);
            SpeichernButton2.setEnabled(true);
            EinzahltagSpinner.setEnabled(false);
            SpeichernButton3.setEnabled(false);
            SparbetragMonatTextField.setEnabled(false);

        }
    }//GEN-LAST:event_yearlyRBActionPerformed

    private void SparbetragTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SparbetragTextFieldActionPerformed

    }//GEN-LAST:event_SparbetragTextFieldActionPerformed

    private void StartkapitalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartkapitalTextFieldActionPerformed

    }//GEN-LAST:event_StartkapitalTextFieldActionPerformed

    private void SpeichernButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeichernButton3ActionPerformed
        String sparbetragMonat = SparbetragMonatTextField.getText();
        Integer.parseInt(sparbetragMonat);

        int einzahltag = (int) EinzahltagSpinner.getValue();
    }//GEN-LAST:event_SpeichernButton3ActionPerformed

    private void monthlyRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyRBActionPerformed
        if (monthlyRB.isSelected()) {
            EinzahltagSpinner.setEnabled(true);
            SpeichernButton3.setEnabled(true);
            SparbetragMonatTextField.setEnabled(true);
            DauerSpinner.setEnabled(false);
            SparbetragTextField.setEnabled(false);
            SpeichernButton2.setEnabled(false);

        }
    }//GEN-LAST:event_monthlyRBActionPerformed

    private void keineBuchstabenImSparbetragMonatTextField(int maxLength) {
        ((AbstractDocument) SparbetragMonatTextField.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(DocumentFilter.FilterBypass fb, int offset, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length()) <= maxLength) {
                    super.insertString(fb, offset, text, attrs);
                }
            }

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length() - length) <= maxLength) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
    }

    private void keineBuchstabenImSparbetragTextField(int maxLength) {
        ((AbstractDocument) SparbetragTextField.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(DocumentFilter.FilterBypass fb, int offset, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length()) <= maxLength) {
                    super.insertString(fb, offset, text, attrs);
                }
            }

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length() - length) <= maxLength) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
    }

    private void keineBuchstabenImStartkapitalTextField(int maxLength) {
        ((AbstractDocument) StartkapitalTextField.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(DocumentFilter.FilterBypass fb, int offset, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length()) <= maxLength) {
                    super.insertString(fb, offset, text, attrs);
                }
            }

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("[0-9]+") && (fb.getDocument().getLength() + text.length() - length) <= maxLength) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            @SuppressWarnings("override")
            public void run() {
                new PensionBut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DauerLabel;
    private javax.swing.JLabel DauerLabel1;
    private javax.swing.JLabel DauerLabel2;
    private javax.swing.JSpinner DauerSpinner;
    private javax.swing.JSpinner EinzahltagSpinner;
    private javax.swing.JLabel SparbetragLabel;
    private javax.swing.JLabel SparbetragMonatLabel;
    private javax.swing.JTextField SparbetragMonatTextField;
    private javax.swing.JTextField SparbetragTextField;
    private javax.swing.JButton SpeichernButton;
    private javax.swing.JButton SpeichernButton2;
    private javax.swing.JButton SpeichernButton3;
    private javax.swing.JLabel StartkapitalLabel;
    private javax.swing.JTextField StartkapitalTextField;
    private javax.swing.JPanel body;
    private javax.swing.JPanel head;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton monthlyRB;
    private javax.swing.JLabel titel;
    private javax.swing.ButtonGroup yearMonthGroup;
    private javax.swing.JRadioButton yearlyRB;
    // End of variables declaration//GEN-END:variables
}
